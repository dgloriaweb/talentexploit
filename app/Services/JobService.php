<?php

namespace App\Services;

use App\Models\Job;
use Exception;

class JobService
{
    protected $job;

    public function __construct(Job $job)
    {
        $this->job = $job;
        $this->dayCases =  [
            'sd1' =>    '00001',
            'sd2' =>    '00010',
            'sd3' =>    '00100',
            'sd4' =>    '00110',
            'sd5' =>    '01000',
            'sd6' =>    '01010',
            'sd7' =>    '10000',
            'sd8' =>    '10010',
            'sd9' =>    '10100',
            'sd10' =>   '11000',
            'sd11' =>   '11010',
            'sd12' =>   '10110',
            'sd13' =>   '11100',
            'sd14' =>   '11110',
            'sd15' =>   '01100'
        ];
        $this->hourCases = [
            // normal_hours
            'sh1' => '10000',
            // normal + nightshift
            'sh2' => '11000',
            // normal + other_shift
            'sh3' => '10010',
            // normal + ns + os
            'sh4' => '11010',
            // nightshift_only
            'sh5' => '01100',
            // other_shift_only
            'sh6' => '00011',
            // nightshift + other_shift
            'sh7' => '01010',
        ];
    }

    public  function storeJobWorkPrefChanges($request)
    {
        $error = "";

        // eliminate requests that don't make sense
        // workplace settings
        $dpw = $request->input('workplace');
        $dpr = $request->input('remote');
        $code1 = $dpw . $dpr;
        if ($code1 == "11" || $code1 == "00") {
            $error = 'this setup is not permitted';
        }

        // workday settings
        $du1 = $request->input('workdays');
        $du2 = $request->input('saturday');
        $du3 = $request->input('sunday');
        $du4 = $request->input('bank_holidays');
        $du5 = $request->input('sat_sun_bh_only');

        $code2 = $du1 . $du2 . $du3 . $du4 . $du5;

        if (!in_array($code2, $this->dayCases)) {
            $error = 'this setup is not permitted';
        }

        // build above setup from current database values
        $hu1 = $request->input('normal_hours');
        $hu2 = $request->input('nightshift');
        $hu3 = $request->input('nightshift_only');
        $hu4 = $request->input('other_shift');
        $hu5 = $request->input('other_shift_only');

        $code3 = $hu1 . $hu2 . $hu3 . $hu4 . $hu5;

        if (!in_array($code3, $this->hourCases)) {
            $error = 'this setup is not permitted';
        }

        $this->job->workplace = $request->input('workplace');
        $this->job->remote = $request->input('remote');
        $this->job->workdays = $request->input('workdays');
        $this->job->saturday = $request->input('saturday');
        $this->job->sunday = $request->input('sunday');
        $this->job->bank_holidays = $request->input('bank_holidays');
        $this->job->sat_sun_bh_only = $request->input('sat_sun_bh_only');
        $this->job->normal_hours = $request->input('normal_hours');
        $this->job->nightshift = ($request->input('nightshift_only') == 1) ? 1 : $request->input('nightshift');
        $this->job->nightshift_only = $request->input('nightshift_only');
        $this->job->other_shift = ($request->input('other_shift_only') == 1) ? 1 : $request->input('other_shift');
        $this->job->other_shift_only = $request->input('other_shift_only');
        $this->job->overtime = $request->input('overtime');

        try {
            $this->job->save();
        } catch (Exception $e) {
            return $e;
        }
        if ($error) {
            return $error;
        }
    }
}
