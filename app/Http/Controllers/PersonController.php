<?php

namespace App\Http\Controllers;

use App\Models\Person;

use App\Services\PersonService;
use Illuminate\Http\Request;

class PersonController extends Controller
{

    /**
     * We don't use this since we get person data connected to user, but testing is useful
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //get all jobs
        $people  = Person::all();

        $response =   $people;
        // return response($response, 200);
        // $response = ['message' => 'user index'];
        return response($response, 200);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function create(Request $request)
    {
        $person = new Person([
            "user_id" => $request->user_id,
            "workplace" => $request->workplace,
            "remote" => $request->remote,
            "workdays" => $request->workdays,
            "saturday" => $request->saturday,
            "sunday" => $request->sunday,
            "bank_holidays" => $request->bank_holidays,
            "sat_sun_bh_only" => $request->sat_sun_bh_only,
            "normal_hours" => $request->normal_hours,
            "nightshift" => $request->nightshift,
            "nightshift_only" => $request->nightshift_only,
            "other_shift" => $request->other_shift,
            "other_shift_only" => $request->other_shift_only,
            "overtime" => $request->overtime,
        ]);
        $person->save();
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response $response
     * @param Person $person
     */
    public function update(Request $request)
    {
        //don't forget frontent/backend validation!
        $userId = $request->request->get('params')['userId'];
        $person = Person::getPersonByUserId($userId);
        $personService = new PersonService($person);
        $response = $personService->storeWorkPrefChanges($request, $person);
        return response($response, 200);
    }
}
