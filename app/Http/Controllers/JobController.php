<?php

namespace App\Http\Controllers;

use App\Models\Job;
use App\Services\JobService;
use App\Services\PersonService;
use Illuminate\Http\Request;

class JobController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //get all jobs
        $response  = Job::all();
        return response($response, 200);
    }


    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        if ($id) {
            // $job = Job::with('person')->findOrFail($id); later
            $job = Job::findOrFail($id);
            $response = $job;
            return response($response, 200);
        } else {
            return response('error', 'job id missing');
        }
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        // try eloquent


    }


    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request)
    {
        $updatedJob = (array)json_decode($request['job']);

        $job = Job::find($updatedJob['id']);
        $jobService = new JobService($job, $request);
        $response = $jobService->storeJobWorkPrefChanges($updatedJob);
        if ($response == 'this setup is not permitted') {
            return response($response, 223);
        }
        return response($response, 200);
    }
}
