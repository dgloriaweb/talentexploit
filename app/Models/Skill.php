<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

class Skill extends Model
{
  use HasFactory;
  protected $table = 'skills';
  protected $primaryKey = 'id';

  /**   relationships   **/

  /**
   * A skill has many properties
   */
  public function properties()
  {
    return $this->hasMany(Property::class, 'id')
      ->where('prop_link_type', '==', 'skill');
  }
  //*** functions */
  public static function getSkillsGrouped($userId)
  {
    $myJson = [];
    /* json should look like this:
  
          certificates: {
              hgv driving license,
              ...
          },
          expectations:{
              ...
          }
  
          get skill_types 
          select skills by skill_type
          build json
  
          */
    $skill_types = DB::select("select skill_type FROM `skills` group by skill_type");
    foreach ($skill_types as $skill_type) {
      json_encode($myJson);
      $skills = DB::select("select* FROM `skills` 
               Left Join skills_core_skills_link
               on skills.id = skills_core_skills_link.skill_id
               Left join core_skills
               on core_skills.id = skills_core_skills_link.core_skill_id
               WHERE skill_type='" . $skill_type->skill_type . "'");
      foreach ($skills as $skill) {
        $myJson[] = [$skill_type->skill_type => [
          "id" => $skill->id,
          "skill" => $skill->skill,
          "core_skill" =>$skill->core_skill
        ]];
      }
    }

    return $myJson;
  }
}
