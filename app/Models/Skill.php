<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

class Skill extends Model
{
  use HasFactory;
  protected $table = 'skills';
  protected $primaryKey = 'id';

  /**   relationships   **/

  /**
   * A skill has many properties
   */
  public function properties()
  {
    return $this->hasMany(Property::class, 'id')
      ->where('prop_link_type', '==', 'skill');
  }
  //*** functions */
  public static function getSkillsGrouped($userId)
  {
    $myArray = null;
    $coreSkills = DB::select("select * from core_skills");

    $skills = DB::select("select 
    skills.id as skill_id, 
    skills.skill as skill, 
    core_skills.core_skill as core_skill 
    FROM `skills` 
    Left Join skills_core_skills_link 
    on skills.id = skills_core_skills_link.skill_id 
    Left join core_skills 
    on core_skills.id = skills_core_skills_link.core_skill_id 
    where skill_type = 'job_type'
    order by core_skill");

     foreach ($coreSkills as $coreskill) {

      $core_skill = $coreskill->core_skill;
      $skills = DB::select("select 
      skills.id as skill_id, 
      skills.skill as skill, 
      core_skills.core_skill as core_skill 
      FROM `skills` 
      Left Join skills_core_skills_link 
      on skills.id = skills_core_skills_link.skill_id 
      Left join core_skills 
      on core_skills.id = skills_core_skills_link.core_skill_id 
      where skill_type = 'job_type'
      AND core_skill = '".$core_skill."'
      order by core_skill");
      foreach ($skills as $skill) {
        $myArray[$core_skill][] = 
        [
          "id" => $skill->skill_id,
          "skill" => $skill->skill
        ];
      }
    }


    return $myArray;
  }
}
